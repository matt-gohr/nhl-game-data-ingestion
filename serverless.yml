service: ${self:custom.serviceName}

plugins:
  - serverless-plugin-typescript
  - serverless-plugin-include-dependencies
  - serverless-plugin-scripts
  - serverless-offline
  - serverless-lift

package:
  excludeDevDependencies: false

custom:
  serviceName: nhl
  schedulerName: game-scheduler
  watcherName: game-watcher
  apiName: game-api
  common: ${file(./secrets.yml)}

provider:
  name: aws
  runtime: nodejs16.x
  memorySize: 256
  timeout: 60
  profile: serverless-admin2
  region: us-east-1
  stage: dev
  environment:
    REGION: ${opt:region, self:provider.region}
    STAGE: ${opt:stage, self:provider.stage}
    USERNAME: ${self:custom.common.USERNAME}
    PASSWORD: ${self:custom.common.PASSWORD}
    ENGINE: ${self:custom.common.ENGINE}
    HOST: ${self:custom.common.HOST}
    PORT: ${self:custom.common.PORT}
    DBNAME: ${self:custom.common.DBNAME}
    SCHEMA: ${self:custom.common.SCHEMA}
    MAXCONNECTIONS: ${self:custom.common.MAXCONNECTIONS}

functions:
  game-scheduler:
    name: game-scheduler
    handler: game-scheduler/src/index.handler
    description: Triggers loads for all games
    events:
      - schedule:
          rate: rate(12 hours)
          name: every-12-hours

  game-watcher:
    name: game-watcher
    handler: game-watcher/src/index.handler
    description: Triggers loads for all games
    events:
      - sqs: arn:aws:sqs:${opt:region, self:provider.region}:${self:custom.common.AWS_ACCOUNT_ID}:record-game-data
